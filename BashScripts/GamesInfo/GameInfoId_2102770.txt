{"2102770":{"success":true,"data":{"type":"game","name":"EEvol","steam_appid":2102770,"required_age":0,"is_free":false,"detailed_description":"<img src=\"https:\/\/cdn.akamai.steamstatic.com\/steam\/apps\/2102770\/extras\/flow2.gif?t=1664384800\" \/><h2 class=\"bb_tag\">EEvol - Electronic Evolution Simulator<\/h2>Create your own world, fill it with cells and watch them evolve. Edit DNA-s, monitor population count of species and give food to your favorite ones! <br>EEvol is a super optimized, fast evolution simulator, simulating tens of thousands of cells at once. Game logic (circle physics, fluid simulation, cell behavior) runs entirely on the video card, making it blazing fast even on my low range AMD RX 550!<br><br><img src=\"https:\/\/cdn.akamai.steamstatic.com\/steam\/apps\/2102770\/extras\/vortex.gif?t=1664384800\" \/><h2 class=\"bb_tag\">World<\/h2>Generate one using the noise generator or build your own with the edit tools provided. Combine the two for maximal effect!<br><ul class=\"bb_ul\"><li>Fluid: There are no early life without the oceans, so naturally EEvol comes with a fluid simulator tightly coupled with other physics.<br><\/li><li>Rock and stones: Found at the bottom of the ocean, rocks are stationary, stones are tumbled by fluid flow as sand does in the bottom of the oceans.<br><\/li><li>Gas bubbles: Inspired by the purple deep sea vents at the bottom of the oceans, which some believe was the origin of the organic life as we know it!<br><\/li><li>Dead cells: Their off white color is the same as marine snow, a shower of organic material falling from upper waters to the deep ocean.<br><\/li><li>Living cells: Each cell has a DNA which controls how it grows and behaves! They have to eat (gas bubbles or dead cells) to collect energy because every action has an energy cost.<br><\/li><li>Organelles: Generate random ones automatically or define by hand! Cells can set their hormone levels, grow flagellum, sense their environment, modify their size, stick to things and many more!<br><\/li><li>DNAs: Use the basic built in ones, create your own by hand or let evolution do the heavy lifting for you!<\/li><\/ul><br><img src=\"https:\/\/cdn.akamai.steamstatic.com\/steam\/apps\/2102770\/extras\/flags.gif?t=1664384800\" \/><h2 class=\"bb_tag\">Cells<\/h2><ul class=\"bb_ul\"><li>Cells are called blobs in this game. This is for legacy reasons, originally I released the game under the name 'Blob by bela'. This version is a rewritten version where game logic runs on the video card to be blazing fast!<br><\/li><li>Species id: Each species has its own id. Blobs can only communicate with a blob with the same species id. Different species can have the same id, for example when a species is mutating, the resulting species will most likely have the same id.<br><\/li><li>age: If a cell reaches the age of 10000 simulation steps it will die.<br><\/li><li>E: Each blob needs energy to do anything. Can be regenerated by eating. When a blob is created with the egg DNA command it has 1000 E.<br><\/li><li>hp: Hitpoints. Can decrease by tumbling forcefully with rocks or one cell can attack the other. When a blob is created with the egg DNA command it has 10 hp.<br><\/li><li>pc: Program counter, which DNA instruction the blob will do next.<br><\/li><li>pc timer: Cooldown between executing DNA instructions.<br><\/li><li>Hormones: Each cell has 8 different hormone levels. Both DNA execution and behavior can be affected by these.<br><\/li><li>Hormone pumps: Unused, will be removed.<br><\/li><li>If table: Each cell have 8 slots to store conditionals to. DNA opcode 'jump to' is affected by these.<br><\/li><li>Prio table<ul class=\"bb_ul\">    <li>Each cell have 8 slots to store input modifiers to. This affects the behavior of the cell.<br>    <\/li><li>Each prio table slot identifies an organelle. If that organelle is an input organelle that has input data (for example a sense organelle sensed something) the prio table slot is considered valid.<br>    <\/li><li>Each output organelle has a starting and ending prio table location ranging from 1 to 8. When it calculates an output it checks if the prio table entry at the starting prio location is valid. If not, it checks at starting prio location + 1. If not checks at starting location + 2. This continues up to the ending prio location.<br>    <\/li><li>If no valid prio table slot found no output is performed.<br>    <\/li><li>If a valid prio table slot is found the search stops. The input data is multiplied or added to a constant value and optionally a hormone value. The resulting value is the output value of the organelle. Each organelle type does a different thing with this value.<br>    <\/li><\/ul><\/li><li>Organelles: Each cell has 8 organelle slots. These can be passive (e.g size), input (e.g sensing) or output (e.g flagellum) organelles.<br><\/li><li>What happens during one sim step<ul class=\"bb_ul\">    <li>Collision resolution: The blob reacts to things it collided with. It tries to connect to things if it has the appropriate connection organelle and it pokes each collided blob with different species id than its own.<br>    <\/li><li>DNA execution: If the pc timer is 1 the pc-th instruction is executed. Most instructions take 50 simulation steps to execute. Growing a new organelle, fission and egg takes more.<br>    <\/li><li>Input organelle step: Each input organelle where the cooldown is 0 tries to get input data.<br>    <\/li><li>Output organelle step: Each output organelle where the cooldown is 0 parses the prio table and tries to get an output.<br>    <\/li><\/ul><\/li><\/ul><br><img src=\"https:\/\/cdn.akamai.steamstatic.com\/steam\/apps\/2102770\/extras\/flow.gif?t=1664384800\" \/><h2 class=\"bb_tag\">DNA<\/h2><ul class=\"bb_ul\"><li>nothing: Does nothing<br><\/li><li>organelle: slot, add\/del, which organelle<br><\/li><li>prio table: slot, input organelle slot, +\/*, hormone slot, constant, is hormone in the calculation or not<br><\/li><li>hormone: pump or level, slot, set or modify, constant<br><\/li><li>if table: slot, value of what, comparisson, value of what\/constant<br><\/li><li>fission: mode, direction, delta h<ul class=\"bb_ul\">    <li>The cell divides into two, halfing the E and hp between the two cells. The new cell will have the same if table, prio table, hormone levels and organelles as the parent cell.<br>    <\/li><li>absolute: Absolute direction.<br>    <\/li><li>conn relative: Direction relative to the 'connection' organelle connection direction in the specified slot plus a constant.<br>    <\/li><li>connect: 'Connection' organelle connecting to the new blob<br>    <\/li><li>replace: 'Connection' organelle connecting to the new blob even if it is already connected, replacing the connected blob.<br>    <\/li><li>chain: The new cell connects to the blob connected to the original cell, the original cell connects to the new cell, forming a chain.<br>    <\/li><li>delta h: The new cell can have one hormone level different than the parent cell. The hormone level in the selected slot will be multiplied with the constans choosen.<br>    <\/li><\/ul><\/li><li>egg: mode, direction<ul class=\"bb_ul\">    <li>The cell divides into two, creating a new empty cell with 10 hp, 1000 E, age of 0, no if table, no organelles, no prio table, pc set to 0.<br>    <\/li><li>absolute: Absolute direction.<br>    <\/li><li>conn relative: Direction relative to the 'connection' organelle connection direction in the specified slot plus a constant.<br>    <\/li><li>connect: 'Connection' organelle connecting to the new blob<br>    <\/li><li>replace: 'Connection' organelle connecting to the new blob even if it is already connected, replacing the connected blob.<br>    <\/li><\/ul><\/li><li>jump to: address, negation, type<ul class=\"bb_ul\">    <li>address: The location to jump in the DNA. If the number specified is bigger than the DNA size it warps.<br>    <\/li><li>one true: At least one selected if table comparissons needs to be true. False if none selected.<br>    <\/li><li>all true: All selected if table comparissons needs to be true. True if none selected.<br>    <\/li><\/ul><\/li><li>suicide: The cells kills itself.<br><\/li><li>mutated: Does nothing.<\/li><\/ul><br><img src=\"https:\/\/cdn.akamai.steamstatic.com\/steam\/apps\/2102770\/extras\/rocky.gif?t=1664384800\" \/><h2 class=\"bb_tag\">Organelles<\/h2><ul class=\"bb_ul\"><li>E per use: How mutch energy it takes to use this organelle when used as an input or output.<br><\/li><li>Cooldown: How many simulation steps it takes to use this organelle as input or output after it was used as one.<br><\/li><li>E to develop: How mutch energy it takes to develop this organelle per simulation step.<br><\/li><li>t to develop: How many simulation steps it takes to develop this organelle.<br><\/li><li>Types<ul class=\"bb_ul\">    <li>hormone<ul class=\"bb_ul\">        <li>Set per organelle: -<br>        <\/li><li>Given in DNA: slot, prio start, prio end<br>        <\/li><li>As input: Always valid, current hormone lvl in slot.<br>        <\/li><li>As output: Sets hormone lvl in slot to output value.<br>        <\/li><li>Static: -<br>        <\/li><\/ul>    <\/li><li>neuron in<ul class=\"bb_ul\">        <li>Set per organelle: -<br>        <\/li><li>Given in DNA: -<br>        <\/li><li>As input: The sum of all output values sent to this blob since the organelle development or last read.<br>        <\/li><li>As output: -<br>        <\/li><li>Static: -<br>        <\/li><\/ul>    <\/li><li>flagellum<ul class=\"bb_ul\">        <li>Set per organelle: force<br>        <\/li><li>Given in DNA: prio start, prio end<br>        <\/li><li>As input: -<br>        <\/li><li>As output: Sets the direction of the force applied.<br>        <\/li><li>Static: -<br>        <\/li><\/ul>    <\/li><li>spikes<ul class=\"bb_ul\">        <li>Set per organelle: atk<br>        <\/li><li>Given in DNA: -<br>        <\/li><li>As input: -<br>        <\/li><li>As output: -<br>        <\/li><li>Static: Causes all colliding blobs with different species id atk damage.<br>        <\/li><\/ul>    <\/li><li>size<ul class=\"bb_ul\">        <li>Set per organelle: delta E max, delta hp max, radius, mass<br>        <\/li><li>Given in DNA: -<br>        <\/li><li>As input: -<br>        <\/li><li>As output: -<br>        <\/li><li>Static: Increases the max E and hp of the cell. Increases the cell radius and mass with the values provided.<br>        <\/li><\/ul>    <\/li><li>cell wall<ul class=\"bb_ul\">        <li>Set per organelle: def<br>        <\/li><li>Given in DNA: -<br>        <\/li><li>As input: -<br>        <\/li><li>As output: -<br>        <\/li><li>Static: Decreases the damage received from colliding cells with spikes with def.<br>        <\/li><\/ul>    <\/li><li>sense circle<ul class=\"bb_ul\">        <li>Set per organelle: type, radius<br>        <\/li><li>Given in DNA: -<br>        <\/li><li>As input: Valid if senses a circle with type specified in the radius specified. At world generation there is a variable called max sense r, this multiplied my 5 is the actual maximum sense distance.<br>        <\/li><li>As output: -<br>        <\/li><li>Static: -<br>        <\/li><\/ul>    <\/li><li>eat dead<ul class=\"bb_ul\">        <li>Set per organelle: bite size<br>        <\/li><li>Given in DNA: -<br>        <\/li><li>As input: -<br>        <\/li><li>As output: -<br>        <\/li><li>Static: By default all blobs eat E balls representing the gas of deep see vents. With this organelle it can no longer eat E balls but can eat dead blobs, taking bites out of them.<br>        <\/li><\/ul>    <\/li><li>connection<ul class=\"bb_ul\">        <li>Connections are work in progress.<br>        <\/li><li>Set per organelle: connect to what, is rod, h check, is neuron out, is muscle, length, strength<br>        <\/li><li>Given in DNA: prio start, prio end<br>        <\/li><li>As input: Valid if connected, value is connection direction.<br>        <\/li><li>As output: Can act both as muscle and\/or neuron out.<br>        <\/li><li>Static: The cell tries to connect to things it is colliding with. These can be rocks, all blobs, or blobs with the same species id. Strength is the max jerk it can withstand.<br>        <\/li><li>connection modifiers<ul class=\"bb_ul\">            <li>These organelles are not organelles in their own but rather modify an already existing connection organelle.<br>            <\/li><li>c h check<ul class=\"bb_ul\">                <li>Set per organelle: -<br>                <\/li><li>Given in DNA: is checking hormone levels, comparisson, h slot, h val<br>                <\/li><li>As input: -<br>                <\/li><li>As output: -<br>                <\/li><li>Static: Only works when connecting to a blob with same species id. Optional, can be turned on\/off. One of the colliding cells hormone levels are checked and only connects if the comparisson is true.<br>                <\/li><\/ul>            <\/li><li>c neuron out<ul class=\"bb_ul\">                <li>Set per organelle: is neuron<br>                <\/li><li>Given in DNA: -<br>                <\/li><li>As input: -<br>                <\/li><li>As output: Only works when connecting to a blob with same species id. Optional, can be turned on\/off. Using the prio values from the original organelle it sends the output value to the cell connected.<br>                <\/li><li>Static: -<br>                <\/li><\/ul>            <\/li><li>c muscle<ul class=\"bb_ul\">                <li>Set per organelle: -<br>                <\/li><li>Given in DNA: is mucle, reference<br>                <\/li><li>As input: -<br>                <\/li><li>As output: Optional, can be turned on\/off. If output value is 0, the connection length will be 0. If the output value is the reference value it will be the length originally given in the original organelle. If it is twice or more the reference amount the length will be twice the one originally given.<br>                <\/li><li>Static: -<br>                <\/li><\/ul>            <\/li><\/ul>        <\/li><\/ul>    <\/li><\/ul><\/li><\/ul>","about_the_game":"<img src=\"https:\/\/cdn.akamai.steamstatic.com\/steam\/apps\/2102770\/extras\/flow2.gif?t=1664384800\" \/><h2 class=\"bb_tag\">EEvol - Electronic Evolution Simulator<\/h2>Create your own world, fill it with cells and watch them evolve. Edit DNA-s, monitor population count of species and give food to your favorite ones! <br>EEvol is a super optimized, fast evolution simulator, simulating tens of thousands of cells at once. Game logic (circle physics, fluid simulation, cell behavior) runs entirely on the video card, making it blazing fast even on my low range AMD RX 550!<br><br><img src=\"https:\/\/cdn.akamai.steamstatic.com\/steam\/apps\/2102770\/extras\/vortex.gif?t=1664384800\" \/><h2 class=\"bb_tag\">World<\/h2>Generate one using the noise generator or build your own with the edit tools provided. Combine the two for maximal effect!<br><ul class=\"bb_ul\"><li>Fluid: There are no early life without the oceans, so naturally EEvol comes with a fluid simulator tightly coupled with other physics.<br><\/li><li>Rock and stones: Found at the bottom of the ocean, rocks are stationary, stones are tumbled by fluid flow as sand does in the bottom of the oceans.<br><\/li><li>Gas bubbles: Inspired by the purple deep sea vents at the bottom of the oceans, which some believe was the origin of the organic life as we know it!<br><\/li><li>Dead cells: Their off white color is the same as marine snow, a shower of organic material falling from upper waters to the deep ocean.<br><\/li><li>Living cells: Each cell has a DNA which controls how it grows and behaves! They have to eat (gas bubbles or dead cells) to collect energy because every action has an energy cost.<br><\/li><li>Organelles: Generate random ones automatically or define by hand! Cells can set their hormone levels, grow flagellum, sense their environment, modify their size, stick to things and many more!<br><\/li><li>DNAs: Use the basic built in ones, create your own by hand or let evolution do the heavy lifting for you!<\/li><\/ul><br><img src=\"https:\/\/cdn.akamai.steamstatic.com\/steam\/apps\/2102770\/extras\/flags.gif?t=1664384800\" \/><h2 class=\"bb_tag\">Cells<\/h2><ul class=\"bb_ul\"><li>Cells are called blobs in this game. This is for legacy reasons, originally I released the game under the name 'Blob by bela'. This version is a rewritten version where game logic runs on the video card to be blazing fast!<br><\/li><li>Species id: Each species has its own id. Blobs can only communicate with a blob with the same species id. Different species can have the same id, for example when a species is mutating, the resulting species will most likely have the same id.<br><\/li><li>age: If a cell reaches the age of 10000 simulation steps it will die.<br><\/li><li>E: Each blob needs energy to do anything. Can be regenerated by eating. When a blob is created with the egg DNA command it has 1000 E.<br><\/li><li>hp: Hitpoints. Can decrease by tumbling forcefully with rocks or one cell can attack the other. When a blob is created with the egg DNA command it has 10 hp.<br><\/li><li>pc: Program counter, which DNA instruction the blob will do next.<br><\/li><li>pc timer: Cooldown between executing DNA instructions.<br><\/li><li>Hormones: Each cell has 8 different hormone levels. Both DNA execution and behavior can be affected by these.<br><\/li><li>Hormone pumps: Unused, will be removed.<br><\/li><li>If table: Each cell have 8 slots to store conditionals to. DNA opcode 'jump to' is affected by these.<br><\/li><li>Prio table<ul class=\"bb_ul\">    <li>Each cell have 8 slots to store input modifiers to. This affects the behavior of the cell.<br>    <\/li><li>Each prio table slot identifies an organelle. If that organelle is an input organelle that has input data (for example a sense organelle sensed something) the prio table slot is considered valid.<br>    <\/li><li>Each output organelle has a starting and ending prio table location ranging from 1 to 8. When it calculates an output it checks if the prio table entry at the starting prio location is valid. If not, it checks at starting prio location + 1. If not checks at starting location + 2. This continues up to the ending prio location.<br>    <\/li><li>If no valid prio table slot found no output is performed.<br>    <\/li><li>If a valid prio table slot is found the search stops. The input data is multiplied or added to a constant value and optionally a hormone value. The resulting value is the output value of the organelle. Each organelle type does a different thing with this value.<br>    <\/li><\/ul><\/li><li>Organelles: Each cell has 8 organelle slots. These can be passive (e.g size), input (e.g sensing) or output (e.g flagellum) organelles.<br><\/li><li>What happens during one sim step<ul class=\"bb_ul\">    <li>Collision resolution: The blob reacts to things it collided with. It tries to connect to things if it has the appropriate connection organelle and it pokes each collided blob with different species id than its own.<br>    <\/li><li>DNA execution: If the pc timer is 1 the pc-th instruction is executed. Most instructions take 50 simulation steps to execute. Growing a new organelle, fission and egg takes more.<br>    <\/li><li>Input organelle step: Each input organelle where the cooldown is 0 tries to get input data.<br>    <\/li><li>Output organelle step: Each output organelle where the cooldown is 0 parses the prio table and tries to get an output.<br>    <\/li><\/ul><\/li><\/ul><br><img src=\"https:\/\/cdn.akamai.steamstatic.com\/steam\/apps\/2102770\/extras\/flow.gif?t=1664384800\" \/><h2 class=\"bb_tag\">DNA<\/h2><ul class=\"bb_ul\"><li>nothing: Does nothing<br><\/li><li>organelle: slot, add\/del, which organelle<br><\/li><li>prio table: slot, input organelle slot, +\/*, hormone slot, constant, is hormone in the calculation or not<br><\/li><li>hormone: pump or level, slot, set or modify, constant<br><\/li><li>if table: slot, value of what, comparisson, value of what\/constant<br><\/li><li>fission: mode, direction, delta h<ul class=\"bb_ul\">    <li>The cell divides into two, halfing the E and hp between the two cells. The new cell will have the same if table, prio table, hormone levels and organelles as the parent cell.<br>    <\/li><li>absolute: Absolute direction.<br>    <\/li><li>conn relative: Direction relative to the 'connection' organelle connection direction in the specified slot plus a constant.<br>    <\/li><li>connect: 'Connection' organelle connecting to the new blob<br>    <\/li><li>replace: 'Connection' organelle connecting to the new blob even if it is already connected, replacing the connected blob.<br>    <\/li><li>chain: The new cell connects to the blob connected to the original cell, the original cell connects to the new cell, forming a chain.<br>    <\/li><li>delta h: The new cell can have one hormone level different than the parent cell. The hormone level in the selected slot will be multiplied with the constans choosen.<br>    <\/li><\/ul><\/li><li>egg: mode, direction<ul class=\"bb_ul\">    <li>The cell divides into two, creating a new empty cell with 10 hp, 1000 E, age of 0, no if table, no organelles, no prio table, pc set to 0.<br>    <\/li><li>absolute: Absolute direction.<br>    <\/li><li>conn relative: Direction relative to the 'connection' organelle connection direction in the specified slot plus a constant.<br>    <\/li><li>connect: 'Connection' organelle connecting to the new blob<br>    <\/li><li>replace: 'Connection' organelle connecting to the new blob even if it is already connected, replacing the connected blob.<br>    <\/li><\/ul><\/li><li>jump to: address, negation, type<ul class=\"bb_ul\">    <li>address: The location to jump in the DNA. If the number specified is bigger than the DNA size it warps.<br>    <\/li><li>one true: At least one selected if table comparissons needs to be true. False if none selected.<br>    <\/li><li>all true: All selected if table comparissons needs to be true. True if none selected.<br>    <\/li><\/ul><\/li><li>suicide: The cells kills itself.<br><\/li><li>mutated: Does nothing.<\/li><\/ul><br><img src=\"https:\/\/cdn.akamai.steamstatic.com\/steam\/apps\/2102770\/extras\/rocky.gif?t=1664384800\" \/><h2 class=\"bb_tag\">Organelles<\/h2><ul class=\"bb_ul\"><li>E per use: How mutch energy it takes to use this organelle when used as an input or output.<br><\/li><li>Cooldown: How many simulation steps it takes to use this organelle as input or output after it was used as one.<br><\/li><li>E to develop: How mutch energy it takes to develop this organelle per simulation step.<br><\/li><li>t to develop: How many simulation steps it takes to develop this organelle.<br><\/li><li>Types<ul class=\"bb_ul\">    <li>hormone<ul class=\"bb_ul\">        <li>Set per organelle: -<br>        <\/li><li>Given in DNA: slot, prio start, prio end<br>        <\/li><li>As input: Always valid, current hormone lvl in slot.<br>        <\/li><li>As output: Sets hormone lvl in slot to output value.<br>        <\/li><li>Static: -<br>        <\/li><\/ul>    <\/li><li>neuron in<ul class=\"bb_ul\">        <li>Set per organelle: -<br>        <\/li><li>Given in DNA: -<br>        <\/li><li>As input: The sum of all output values sent to this blob since the organelle development or last read.<br>        <\/li><li>As output: -<br>        <\/li><li>Static: -<br>        <\/li><\/ul>    <\/li><li>flagellum<ul class=\"bb_ul\">        <li>Set per organelle: force<br>        <\/li><li>Given in DNA: prio start, prio end<br>        <\/li><li>As input: -<br>        <\/li><li>As output: Sets the direction of the force applied.<br>        <\/li><li>Static: -<br>        <\/li><\/ul>    <\/li><li>spikes<ul class=\"bb_ul\">        <li>Set per organelle: atk<br>        <\/li><li>Given in DNA: -<br>        <\/li><li>As input: -<br>        <\/li><li>As output: -<br>        <\/li><li>Static: Causes all colliding blobs with different species id atk damage.<br>        <\/li><\/ul>    <\/li><li>size<ul class=\"bb_ul\">        <li>Set per organelle: delta E max, delta hp max, radius, mass<br>        <\/li><li>Given in DNA: -<br>        <\/li><li>As input: -<br>        <\/li><li>As output: -<br>        <\/li><li>Static: Increases the max E and hp of the cell. Increases the cell radius and mass with the values provided.<br>        <\/li><\/ul>    <\/li><li>cell wall<ul class=\"bb_ul\">        <li>Set per organelle: def<br>        <\/li><li>Given in DNA: -<br>        <\/li><li>As input: -<br>        <\/li><li>As output: -<br>        <\/li><li>Static: Decreases the damage received from colliding cells with spikes with def.<br>        <\/li><\/ul>    <\/li><li>sense circle<ul class=\"bb_ul\">        <li>Set per organelle: type, radius<br>        <\/li><li>Given in DNA: -<br>        <\/li><li>As input: Valid if senses a circle with type specified in the radius specified. At world generation there is a variable called max sense r, this multiplied my 5 is the actual maximum sense distance.<br>        <\/li><li>As output: -<br>        <\/li><li>Static: -<br>        <\/li><\/ul>    <\/li><li>eat dead<ul class=\"bb_ul\">        <li>Set per organelle: bite size<br>        <\/li><li>Given in DNA: -<br>        <\/li><li>As input: -<br>        <\/li><li>As output: -<br>        <\/li><li>Static: By default all blobs eat E balls representing the gas of deep see vents. With this organelle it can no longer eat E balls but can eat dead blobs, taking bites out of them.<br>        <\/li><\/ul>    <\/li><li>connection<ul class=\"bb_ul\">        <li>Connections are work in progress.<br>        <\/li><li>Set per organelle: connect to what, is rod, h check, is neuron out, is muscle, length, strength<br>        <\/li><li>Given in DNA: prio start, prio end<br>        <\/li><li>As input: Valid if connected, value is connection direction.<br>        <\/li><li>As output: Can act both as muscle and\/or neuron out.<br>        <\/li><li>Static: The cell tries to connect to things it is colliding with. These can be rocks, all blobs, or blobs with the same species id. Strength is the max jerk it can withstand.<br>        <\/li><li>connection modifiers<ul class=\"bb_ul\">            <li>These organelles are not organelles in their own but rather modify an already existing connection organelle.<br>            <\/li><li>c h check<ul class=\"bb_ul\">                <li>Set per organelle: -<br>                <\/li><li>Given in DNA: is checking hormone levels, comparisson, h slot, h val<br>                <\/li><li>As input: -<br>                <\/li><li>As output: -<br>                <\/li><li>Static: Only works when connecting to a blob with same species id. Optional, can be turned on\/off. One of the colliding cells hormone levels are checked and only connects if the comparisson is true.<br>                <\/li><\/ul>            <\/li><li>c neuron out<ul class=\"bb_ul\">                <li>Set per organelle: is neuron<br>                <\/li><li>Given in DNA: -<br>                <\/li><li>As input: -<br>                <\/li><li>As output: Only works when connecting to a blob with same species id. Optional, can be turned on\/off. Using the prio values from the original organelle it sends the output value to the cell connected.<br>                <\/li><li>Static: -<br>                <\/li><\/ul>            <\/li><li>c muscle<ul class=\"bb_ul\">                <li>Set per organelle: -<br>                <\/li><li>Given in DNA: is mucle, reference<br>                <\/li><li>As input: -<br>                <\/li><li>As output: Optional, can be turned on\/off. If output value is 0, the connection length will be 0. If the output value is the reference value it will be the length originally given in the original organelle. If it is twice or more the reference amount the length will be twice the one originally given.<br>                <\/li><li>Static: -<br>                <\/li><\/ul>            <\/li><\/ul>        <\/li><\/ul>    <\/li><\/ul><\/li><\/ul>","short_description":"Simulate cellular life, create an aquarium, fill it with tens of thousands of cells, modify their DNA and watch them evolve! See how they fight for survival, give them food or put them in harm's way. Monitor the population of each species and their descendants.","supported_languages":"English","header_image":"https:\/\/cdn.akamai.steamstatic.com\/steam\/apps\/2102770\/header.jpg?t=1664384800","website":"https:\/\/www.reddit.com\/r\/eevol_sim\/","pc_requirements":{"minimum":"<strong>Minimum:<\/strong><br><ul class=\"bb_ul\"><li>Requires a 64-bit processor and operating system<br><\/li><li><strong>OS:<\/strong> Windows 7 64bit<br><\/li><li><strong>Memory:<\/strong> 1 GB RAM<br><\/li><li><strong>Graphics:<\/strong> OpenGL 4.3+ capable, 1GB VRAM<br><\/li><li><strong>Storage:<\/strong> 1 GB available space<br><\/li><li><strong>Additional Notes:<\/strong> Tested and working on Ubuntu 20.04 with Wine<\/li><\/ul>","recommended":"<strong>Recommended:<\/strong><br><ul class=\"bb_ul\"><li>Requires a 64-bit processor and operating system<br><\/li><li><strong>OS:<\/strong> Windows 7+ 64bit<br><\/li><li><strong>Memory:<\/strong> 1 GB RAM<br><\/li><li><strong>Graphics:<\/strong> OpenGL 4.3+ capable, 2GB VRAM<br><\/li><li><strong>Storage:<\/strong> 1 GB available space<\/li><\/ul>"},"mac_requirements":{"minimum":"<strong>Minimum:<\/strong><br><ul class=\"bb_ul\"><li>Requires a 64-bit processor and operating system<\/li><\/ul>","recommended":"<strong>Recommended:<\/strong><br><ul class=\"bb_ul\"><li>Requires a 64-bit processor and operating system<\/li><\/ul>"},"linux_requirements":{"minimum":"<strong>Minimum:<\/strong><br><ul class=\"bb_ul\"><li>Requires a 64-bit processor and operating system<\/li><\/ul>","recommended":"<strong>Recommended:<\/strong><br><ul class=\"bb_ul\"><li>Requires a 64-bit processor and operating system<\/li><\/ul>"},"developers":["Mihaly Sisak"],"publishers":["Mihaly Sisak"],"price_overview":{"currency":"RUB","initial":25900,"final":25900,"discount_percent":0,"initial_formatted":"","final_formatted":"259 pуб."},"packages":[751577],"package_groups":[{"name":"default","title":"Buy EEvol","description":"","selection_text":"Select a purchase option","save_text":"","display_type":0,"is_recurring_subscription":"false","subs":[{"packageid":751577,"percent_savings_text":" ","percent_savings":0,"option_text":"EEvol - 259 pуб.","option_description":"","can_get_free_license":"0","is_free_license":false,"price_in_cents_with_discount":25900}]}],"platforms":{"windows":true,"mac":false,"linux":false},"categories":[{"id":2,"description":"Single-player"}],"genres":[{"id":"28","description":"Simulation"},{"id":"70","description":"Early Access"}],"screenshots":[{"id":0,"path_thumbnail":"https:\/\/cdn.akamai.steamstatic.com\/steam\/apps\/2102770\/ss_96e55b2a8236aeacd0b7d12e6b82fa7ee2a1de67.600x338.jpg?t=1664384800","path_full":"https:\/\/cdn.akamai.steamstatic.com\/steam\/apps\/2102770\/ss_96e55b2a8236aeacd0b7d12e6b82fa7ee2a1de67.1920x1080.jpg?t=1664384800"},{"id":1,"path_thumbnail":"https:\/\/cdn.akamai.steamstatic.com\/steam\/apps\/2102770\/ss_4b7773407b2884bafcf3b807174a634558f4adfd.600x338.jpg?t=1664384800","path_full":"https:\/\/cdn.akamai.steamstatic.com\/steam\/apps\/2102770\/ss_4b7773407b2884bafcf3b807174a634558f4adfd.1920x1080.jpg?t=1664384800"},{"id":2,"path_thumbnail":"https:\/\/cdn.akamai.steamstatic.com\/steam\/apps\/2102770\/ss_813c73e3cfc9083e5aa80a26a72a356b21d96e94.600x338.jpg?t=1664384800","path_full":"https:\/\/cdn.akamai.steamstatic.com\/steam\/apps\/2102770\/ss_813c73e3cfc9083e5aa80a26a72a356b21d96e94.1920x1080.jpg?t=1664384800"},{"id":3,"path_thumbnail":"https:\/\/cdn.akamai.steamstatic.com\/steam\/apps\/2102770\/ss_ee864642f96be63e9a1717c8c51b0563cbe86f20.600x338.jpg?t=1664384800","path_full":"https:\/\/cdn.akamai.steamstatic.com\/steam\/apps\/2102770\/ss_ee864642f96be63e9a1717c8c51b0563cbe86f20.1920x1080.jpg?t=1664384800"},{"id":4,"path_thumbnail":"https:\/\/cdn.akamai.steamstatic.com\/steam\/apps\/2102770\/ss_f442ee16dddb2f6b39664d5671ebc186d696ff75.600x338.jpg?t=1664384800","path_full":"https:\/\/cdn.akamai.steamstatic.com\/steam\/apps\/2102770\/ss_f442ee16dddb2f6b39664d5671ebc186d696ff75.1920x1080.jpg?t=1664384800"},{"id":5,"path_thumbnail":"https:\/\/cdn.akamai.steamstatic.com\/steam\/apps\/2102770\/ss_26bb9f28fdf226b3c97a3ee51ad16fe2ea92f631.600x338.jpg?t=1664384800","path_full":"https:\/\/cdn.akamai.steamstatic.com\/steam\/apps\/2102770\/ss_26bb9f28fdf226b3c97a3ee51ad16fe2ea92f631.1920x1080.jpg?t=1664384800"}],"movies":[{"id":256902321,"name":"Release trailer","thumbnail":"https:\/\/cdn.akamai.steamstatic.com\/steam\/apps\/256902321\/movie.293x165.jpg?t=1662187793","webm":{"480":"http:\/\/cdn.akamai.steamstatic.com\/steam\/apps\/256902321\/movie480_vp9.webm?t=1662187793","max":"http:\/\/cdn.akamai.steamstatic.com\/steam\/apps\/256902321\/movie_max_vp9.webm?t=1662187793"},"mp4":{"480":"http:\/\/cdn.akamai.steamstatic.com\/steam\/apps\/256902321\/movie480.mp4?t=1662187793","max":"http:\/\/cdn.akamai.steamstatic.com\/steam\/apps\/256902321\/movie_max.mp4?t=1662187793"},"highlight":true}],"release_date":{"coming_soon":false,"date":"16 Sep, 2022"},"support_info":{"url":"https:\/\/www.reddit.com\/r\/eevol_sim\/","email":""},"background":"https:\/\/cdn.akamai.steamstatic.com\/steam\/apps\/2102770\/page_bg_generated_v6b.jpg?t=1664384800","background_raw":"https:\/\/cdn.akamai.steamstatic.com\/steam\/apps\/2102770\/page.bg.jpg?t=1664384800","content_descriptors":{"ids":[],"notes":null}}}}