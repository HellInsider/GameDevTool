BEGIN;


CREATE TABLE IF NOT EXISTS "DB_schema"."Games"
(
    appid integer NOT NULL,
    name text COLLATE pg_catalog."default" NOT NULL,
    required_age integer NOT NULL,
    is_free boolean NOT NULL,
    dlc integer[],
    about_the_game text COLLATE pg_catalog."default" NOT NULL,
    detailed_description text COLLATE pg_catalog."default",
    short_description text COLLATE pg_catalog."default",
    developers text[] COLLATE pg_catalog."default" NOT NULL,
    publishers text[] COLLATE pg_catalog."default",
    packages integer[],
    recommendations integer,
    CONSTRAINT "Games_pkey" PRIMARY KEY (appid)
);

CREATE TABLE IF NOT EXISTS "DB_schema"."Genre"
(
    genre_id integer NOT NULL,
    description text NOT NULL,
    PRIMARY KEY (genre_id)
);

CREATE TABLE IF NOT EXISTS "DB_schema"."Requirements"
(
    appid integer NOT NULL,
    minimum text NOT NULL,
    PRIMARY KEY (appid)
);

CREATE TABLE IF NOT EXISTS "DB_schema"."Metacritic"
(
    appid integer NOT NULL,
    score integer NOT NULL,
    url text NOT NULL,
    PRIMARY KEY (appid)
);

CREATE TABLE IF NOT EXISTS "DB_schema"."Category"
(
    category_id integer NOT NULL,
    description text NOT NULL,
    PRIMARY KEY (category_id)
);

CREATE TABLE IF NOT EXISTS "DB_schema"."Release_date"
(
    appid integer NOT NULL,
    comming_soon boolean NOT NULL DEFAULT true,
    date integer,
    PRIMARY KEY (appid)
);

CREATE TABLE IF NOT EXISTS "DB_schema"."Platforms"
(
    appid integer NOT NULL,
    platform_win boolean NOT NULL DEFAULT false,
    platform_mac boolean NOT NULL DEFAULT false,
    platform_linux boolean NOT NULL DEFAULT false,
    PRIMARY KEY (appid)
);

CREATE TABLE IF NOT EXISTS "DB_schema"."User"
(
    user_id integer NOT NULL,
    name text NOT NULL,
    games_count integer NOT NULL,
    played_games integer[] NOT NULL,
    PRIMARY KEY (user_id)
);

CREATE TABLE IF NOT EXISTS "DB_schema"."Played_game"
(
    appid integer NOT NULL,
    playtime_forever integer,
    playtime_windows_forever integer,
    playtime_mac_forever integer,
    playtime_linux_forever integer,
    rtime_last_played integer,
    playtime_2weeks integer,
    has_community_visible_stats boolean,
    PRIMARY KEY (appid)
);

CREATE TABLE IF NOT EXISTS "DB_schema"."Games_Genre"
(
    "Games_appid" integer NOT NULL,
    "Genre_genre_id" integer NOT NULL
);

CREATE TABLE IF NOT EXISTS "DB_schema"."Games_Category"
(
    "Games_appid" integer NOT NULL,
    "Category_category_id" integer NOT NULL
);

CREATE TABLE IF NOT EXISTS "DB_schema"."User_Played_game"
(
    "User_user_id" integer NOT NULL,
    "Played_game_appid" integer NOT NULL
);

CREATE TABLE IF NOT EXISTS "DB_schema"."Prices"
(
    appid integer NOT NULL,
    currency text NOT NULL DEFAULT 'RUB',
    initial integer,
    final integer,
    discount_percent integer,
    country text DEFAULT 'Russia',
    PRIMARY KEY (appid)
);

CREATE TABLE IF NOT EXISTS "DB_schema"."Games_Prices"
(
    "Games_appid" integer NOT NULL,
    "Prices_appid" integer NOT NULL
);

ALTER TABLE IF EXISTS "DB_schema"."Games"
    ADD FOREIGN KEY (appid)
    REFERENCES "DB_schema"."Requirements" (appid) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS "DB_schema"."Games"
    ADD FOREIGN KEY (appid)
    REFERENCES "DB_schema"."Release_date" (appid) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS "DB_schema"."Games"
    ADD FOREIGN KEY (appid)
    REFERENCES "DB_schema"."Platforms" (appid) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS "DB_schema"."Games"
    ADD FOREIGN KEY (appid)
    REFERENCES "DB_schema"."Metacritic" (appid) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS "DB_schema"."Played_game"
    ADD FOREIGN KEY (appid)
    REFERENCES "DB_schema"."Games" (appid) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS "DB_schema"."Games_Genre"
    ADD FOREIGN KEY ("Games_appid")
    REFERENCES "DB_schema"."Games" (appid) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS "DB_schema"."Games_Genre"
    ADD FOREIGN KEY ("Genre_genre_id")
    REFERENCES "DB_schema"."Genre" (genre_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS "DB_schema"."Games_Category"
    ADD FOREIGN KEY ("Games_appid")
    REFERENCES "DB_schema"."Games" (appid) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS "DB_schema"."Games_Category"
    ADD FOREIGN KEY ("Category_category_id")
    REFERENCES "DB_schema"."Category" (category_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS "DB_schema"."User_Played_game"
    ADD FOREIGN KEY ("User_user_id")
    REFERENCES "DB_schema"."User" (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS "DB_schema"."User_Played_game"
    ADD FOREIGN KEY ("Played_game_appid")
    REFERENCES "DB_schema"."Played_game" (appid) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS "DB_schema"."Games_Prices"
    ADD FOREIGN KEY ("Games_appid")
    REFERENCES "DB_schema"."Games" (appid) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS "DB_schema"."Games_Prices"
    ADD FOREIGN KEY ("Prices_appid")
    REFERENCES "DB_schema"."Prices" (appid) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;